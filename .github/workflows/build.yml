name: Build

on:
  workflow_call:

jobs:
  get-clangir-id:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read JSON
        id: set-matrix
        run: echo "matrix=$(jq -c . < ./.github/workflows/clangir-version.json)" >> $GITHUB_OUTPUT

  pull-clangir-build:
    runs-on: ubuntu-latest
    needs: get-clangir-id
    strategy:
      matrix:
        clangir: ${{ fromJSON(needs.get-clangir-id.outputs.matrix) }}
        os: [macos-latest]

    steps:
      - name: Concat clangir Docker image tag
        run: |
          echo "IMAGE_TAG=$(printf "%s" \
              ${{ secrets.DOCKERHUB_USERNAME }}/\
              clangir_${{ matrix.os }}_build:\
              ${{ matrix.clangir.normalized_repo }}-\
              ${{ matrix.clangir.version }} \
            )" >> $GITHUB_ENV

      - name: Pull clangir build from Docker
        run: |
          docker pull ${{ env.IMAGE_TAG }}
          docker create --name clangir_build ${{ env.IMAGE_TAG }}
          mkdir -p clangir/llvm/build
          docker cp clangir_build:/clangir/llvm/build ${{ github.workspace }}/clangir_build
          docker rm -f clangir_build

      - name: Create artifact to pass to macOS runner
        uses: actions/upload-artifact@v4
        with:
          name: clangir_${{ matrix.os }}_build
          path: ${{ github.workspace }}/clangir_build
          retention-days: 1

  build:
    needs: [get-clangir-id, pull-clangir-build]
    strategy:
      matrix:
        clangir: ${{ fromJSON(needs.get-clangir-id.outputs.matrix) }}
        os: [macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install Packages (Linux)
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo apt-get update
        sudo apt-get install -y -q --no-install-recommends \
          ninja-build

    - name: Cache Protobuf install (Linux)
      if: startsWith(runner.os, 'Linux')
      id: cache-protobuf-install
      uses: actions/cache@v4
      with:
        path: protobuf-install
        key: ${{ matrix.os }}-protobuf-install

    - name: Install Protobuf (Linux)
      if: startsWith(runner.os, 'Linux')
      run: |
        if [[ ! -d protobuf-install ]]
        then
          git clone --recursive https://github.com/protocolbuffers/protobuf.git
          cd protobuf
          git checkout v29.3
          git submodule update --init --recursive
          mkdir build && cd build
          cmake -D CMAKE_BUILD_TYPE=Release \
                -D protobuf_BUILD_TESTS=OFF \
                -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/protobuf-install \
                -G Ninja ..
          ninja
          sudo ninja install
        fi
        sudo cp -r $GITHUB_WORKSPACE/protobuf-install/* /usr/local

    - name: Install Packages (macOS)
      if: startsWith(runner.os, 'macOS')
      run: |
        brew install protobuf ninja

    - name: Checkout clangir sources
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.clangir.version }}
        repository: ${{ matrix.clangir.repository }}
        path: ${{ github.workspace }}/clangir

    - name: Create clangir build directory
      run: mkdir -p ${{ github.workspace }}/clangir/llvm/build

    - name: Fetch clangir build (macOS)
      if: startsWith(runner.os, 'macOS')
      uses: actions/download-artifact@v4
      with:
        name: clangir_${{ matrix.os }}_build
        path: ${{ github.workspace }}/clangir/llvm/build

    - uses: actions/checkout@v4
      with:
        path: main

    - name: Build cir-tac
      working-directory: main
      run: |
        mkdir build && cd build
        cmake -DCLANGIR_BUILD_DIR=$GITHUB_WORKSPACE/clangir/llvm/build .. && make

    - name: Upload cir-tac build artifact
      uses: actions/upload-artifact@v4
      with:
        name: cir-tac-${{ matrix.os }}-${{ runner.arch }}
        path:  |
          main/build/tools/cir-ser-proto/cir-ser-proto
          main/build/tools/cir-deser-proto/cir-deser-proto
        retention-days: 1
