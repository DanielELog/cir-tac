/* Autogenerated by mlir-tblgen; don't manually edit. */

syntax = "proto3";

package protocir;
option java_package = "org.jacodb.impl.grpc";

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "setup.proto";
import "enumgen.proto";

message CIRAbsOp {
  CIROpID src = 1;

  optional google.protobuf.Empty poison = 2;
}

message CIRAllocExceptionOp {

  uint64 size = 1;
}

message CIRAllocaOp {
  optional CIROpID dynAllocSize = 1;

  CIRTypeID allocaType = 2;
  string name = 3;
  optional google.protobuf.Empty init = 4;
  optional google.protobuf.Empty constant = 5;
  optional uint64 alignment = 6;
}

message CIRArrayCtor {
  CIROpID addr = 1;

}

message CIRArrayDtor {
  CIROpID addr = 1;

}

message CIRAssumeAlignedOp {
  CIROpID pointer = 1;
  optional CIROpID offset = 2;

  uint64 alignment = 3;
}

message CIRAssumeOp {
  CIROpID predicate = 1;

}

message CIRAssumeSepStorageOp {
  CIROpID ptr1 = 1;
  CIROpID ptr2 = 2;

}

message CIRAtomicCmpXchg {
  CIROpID ptr = 1;
  CIROpID expected = 2;
  CIROpID desired = 3;

  CIRMemOrder succ_order = 4;
  CIRMemOrder fail_order = 5;
  optional google.protobuf.Empty weak = 6;
  optional google.protobuf.Empty is_volatile = 7;
}

message CIRAtomicFetch {
  CIROpID ptr = 1;
  CIROpID val = 2;

  CIRAtomicFetchKind binop = 3;
  CIRMemOrder mem_order = 4;
  optional google.protobuf.Empty is_volatile = 5;
  optional google.protobuf.Empty fetch_first = 6;
}

message CIRAtomicXchg {
  CIROpID ptr = 1;
  CIROpID val = 2;

  CIRMemOrder mem_order = 3;
  optional google.protobuf.Empty is_volatile = 4;
}

message CIRAwaitOp {

  CIRAwaitKind kind = 1;
}

message CIRBaseClassAddrOp {
  CIROpID derived_addr = 1;

  uint64 offset = 2;
  optional google.protobuf.Empty assume_not_null = 3;
}

message CIRBinOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

  CIRBinOpKind kind = 3;
  optional google.protobuf.Empty no_unsigned_wrap = 4;
  optional google.protobuf.Empty no_signed_wrap = 5;
}

message CIRBinOpOverflowOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

  CIRBinOpOverflowKind kind = 3;
}

message CIRBitClrsbOp {
  CIROpID input = 1;

}

message CIRBitClzOp {
  CIROpID input = 1;

}

message CIRBitCtzOp {
  CIROpID input = 1;

}

message CIRBitFfsOp {
  CIROpID input = 1;

}

message CIRBitParityOp {
  CIROpID input = 1;

}

message CIRBitPopcountOp {
  CIROpID input = 1;

}

message CIRBrCondOp {
  CIROpID cond = 1;
  repeated CIROpID destOperandsTrue = 2;
  repeated CIROpID destOperandsFalse = 3;

}

message CIRBrOp {
  repeated CIROpID destOperands = 1;

}

message CIRBreakOp {

}

message CIRByteswapOp {
  CIROpID input = 1;

}

message CIRInlineAsmOp {
  repeated CIROpID operands = 1;

  string asm_string = 2;
  string constraints = 3;
  optional google.protobuf.Empty side_effects = 4;
  CIRAsmFlavor asm_flavor = 5;
  repeated uint32 operands_segments = 6;
}

message CIRCallOp {
  repeated CIROpID arg_ops = 1;

  optional google.protobuf.Empty exception = 2;
  optional string callee = 3;
  CIRCallingConv calling_conv = 4;
}

message CIRCaseOp {

  CIRCaseOpKind kind = 1;
}

message CIRCastOp {
  CIROpID src = 1;

  CIRCastKind kind = 2;
}

message CIRCatchParamOp {
  optional CIROpID exception_ptr = 1;

  optional CIRCatchParamKind kind = 2;
}

message CIRCeilOp {
  CIROpID src = 1;

}

message CIRClearCacheOp {
  CIROpID begin = 1;
  CIROpID end = 2;

}

message CIRCmpOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

  CIRCmpOpKind kind = 3;
}

message CIRCmpThreeWayOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

}

message CIRComplexBinOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

  CIRComplexBinOpKind kind = 3;
  CIRComplexRangeKind range = 4;
  optional google.protobuf.Empty promoted = 5;
}

message CIRComplexCreateOp {
  CIROpID real = 1;
  CIROpID imag = 2;

}

message CIRComplexImagOp {
  CIROpID operand = 1;

}

message CIRComplexImagPtrOp {
  CIROpID operand = 1;

}

message CIRComplexRealOp {
  CIROpID operand = 1;

}

message CIRComplexRealPtrOp {
  CIROpID operand = 1;

}

message CIRConditionOp {
  CIROpID condition = 1;

}

message CIRConstantOp {

  google.protobuf.Any value = 1;
}

message CIRContinueOp {

}

message CIRCopyOp {
  CIROpID dst = 1;
  CIROpID src = 2;

  optional google.protobuf.Empty is_volatile = 3;
}

message CIRCopysignOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

}

message CIRCosOp {
  CIROpID src = 1;

}

message CIRDerivedClassAddrOp {
  CIROpID base_addr = 1;

  uint64 offset = 2;
  optional google.protobuf.Empty assume_not_null = 3;
}

message CIRDoWhileOp {

}

message CIRDynamicCastOp {
  CIROpID src = 1;

  CIRDynamicCastKind kind = 2;
  optional google.protobuf.Empty relative_layout = 3;
}

message CIREhInflightOp {

  optional google.protobuf.Empty cleanup = 1;
}

message CIREhTypeIdOp {

  string type_sym = 1;
}

message CIRExp2Op {
  CIROpID src = 1;

}

message CIRExpOp {
  CIROpID src = 1;

}

message CIRExpectOp {
  CIROpID val = 1;
  CIROpID expected = 2;

  optional double prob = 3;
}

message CIRFAbsOp {
  CIROpID src = 1;

}

message CIRFMaxOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

}

message CIRFMinOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

}

message CIRFModOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

}

message CIRFloorOp {
  CIROpID src = 1;

}

message CIRForOp {

}

message CIRFrameAddrOp {
  CIROpID level = 1;

}

message CIRFreeExceptionOp {
  CIROpID ptr = 1;

}

message CIRFuncOp {

  string sym_name = 1;
  CIRVisibilityKind global_visibility = 2;
  CIRTypeID function_type = 3;
  optional google.protobuf.Empty builtin = 4;
  optional google.protobuf.Empty coroutine = 5;
  optional google.protobuf.Empty lambda = 6;
  optional google.protobuf.Empty no_proto = 7;
  optional google.protobuf.Empty dsolocal = 8;
  CIRGlobalLinkageKind linkage = 9;
  CIRCallingConv calling_conv = 10;
  optional string sym_visibility = 11;
  optional google.protobuf.Empty comdat = 12;
  optional string aliasee = 13;
  optional google.protobuf.Empty global_ctor = 14;
  optional google.protobuf.Empty global_dtor = 15;
}

message CIRGetBitfieldOp {
  CIROpID addr = 1;

  optional google.protobuf.Empty is_volatile = 2;
}

message CIRGetGlobalOp {

  string name = 1;
  optional google.protobuf.Empty tls = 2;
}

message CIRGetMemberOp {
  CIROpID addr = 1;

  string name = 2;
  uint64 index_attr = 3;
}

message CIRGetMethodOp {
  CIROpID method = 1;
  CIROpID object = 2;

}

message CIRGetRuntimeMemberOp {
  CIROpID addr = 1;
  CIROpID member = 2;

}

message CIRGlobalOp {

  string sym_name = 1;
  CIRVisibilityKind global_visibility = 2;
  optional string sym_visibility = 3;
  CIRTypeID sym_type = 4;
  CIRGlobalLinkageKind linkage = 5;
  optional CIRTLS_Model tls_model = 6;
  optional google.protobuf.Empty comdat = 7;
  optional google.protobuf.Empty constant = 8;
  optional google.protobuf.Empty dsolocal = 9;
  optional uint64 alignment = 10;
  optional string section = 11;
}

message CIRGotoOp {

  string label = 1;
}

message CIRIfOp {
  CIROpID condition = 1;

}

message CIRIsConstantOp {
  CIROpID val = 1;

}

message CIRIsFPClassOp {
  CIROpID src = 1;

  uint64 flags = 2;
}

message CIRIterBeginOp {
  CIROpID container = 1;

  string original_fn = 2;
}

message CIRIterEndOp {
  CIROpID container = 1;

  string original_fn = 2;
}

message CIRLLVMIntrinsicCallOp {
  repeated CIROpID arg_ops = 1;

  string intrinsic_name = 2;
}

message CIRLLrintOp {
  CIROpID src = 1;

}

message CIRLLroundOp {
  CIROpID src = 1;

}

message CIRLabelOp {

  string label = 1;
}

message CIRLoadOp {
  CIROpID addr = 1;

  optional google.protobuf.Empty isDeref = 2;
  optional google.protobuf.Empty is_volatile = 3;
  optional uint64 alignment = 4;
  optional CIRMemOrder mem_order = 5;
}

message CIRLog10Op {
  CIROpID src = 1;

}

message CIRLog2Op {
  CIROpID src = 1;

}

message CIRLogOp {
  CIROpID src = 1;

}

message CIRLrintOp {
  CIROpID src = 1;

}

message CIRLroundOp {
  CIROpID src = 1;

}

message CIRMemChrOp {
  CIROpID src = 1;
  CIROpID pattern = 2;
  CIROpID len = 3;

}

message CIRMemCpyInlineOp {
  CIROpID dst = 1;
  CIROpID src = 2;

  uint64 len = 3;
}

message CIRMemCpyOp {
  CIROpID dst = 1;
  CIROpID src = 2;
  CIROpID len = 3;

}

message CIRMemMoveOp {
  CIROpID dst = 1;
  CIROpID src = 2;
  CIROpID len = 3;

}

message CIRMemSetInlineOp {
  CIROpID dst = 1;
  CIROpID val = 2;

  uint64 len = 3;
}

message CIRMemSetOp {
  CIROpID dst = 1;
  CIROpID val = 2;
  CIROpID len = 3;

}

message CIRNearbyintOp {
  CIROpID src = 1;

}

message CIRObjSizeOp {
  CIROpID ptr = 1;

  CIRSizeInfoType kind = 2;
  optional google.protobuf.Empty dynamic = 3;
}

message CIRPowOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

}

message CIRPrefetchOp {
  CIROpID addr = 1;

  uint64 locality = 2;
  optional google.protobuf.Empty isWrite = 3;
}

message CIRPtrDiffOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

}

message CIRPtrMaskOp {
  CIROpID ptr = 1;
  CIROpID mask = 2;

}

message CIRPtrStrideOp {
  CIROpID base = 1;
  CIROpID stride = 2;

}

message CIRResumeOp {
  optional CIROpID exception_ptr = 1;
  optional CIROpID type_id = 2;

  optional google.protobuf.Empty rethrow = 3;
}

message CIRReturnAddrOp {
  CIROpID level = 1;

}

message CIRReturnOp {
  repeated CIROpID input = 1;

}

message CIRRintOp {
  CIROpID src = 1;

}

message CIRRotateOp {
  CIROpID src = 1;
  CIROpID amt = 2;

  optional google.protobuf.Empty left = 3;
}

message CIRRoundOp {
  CIROpID src = 1;

}

message CIRScopeOp {

}

message CIRSelectOp {
  CIROpID condition = 1;
  CIROpID true_value = 2;
  CIROpID false_value = 3;

}

message CIRSetBitfieldOp {
  CIROpID addr = 1;
  CIROpID src = 2;

  optional google.protobuf.Empty is_volatile = 3;
}

message CIRShiftOp {
  CIROpID value = 1;
  CIROpID amount = 2;

  optional google.protobuf.Empty isShiftleft = 3;
}

message CIRSignBitOp {
  CIROpID input = 1;

}

message CIRSinOp {
  CIROpID src = 1;

}

message CIRSqrtOp {
  CIROpID src = 1;

}

message CIRStackRestoreOp {
  CIROpID ptr = 1;

}

message CIRStackSaveOp {

}

message CIRStdFindOp {
  CIROpID first = 1;
  CIROpID last = 2;
  CIROpID pattern = 3;

  string original_fn = 4;
}

message CIRStoreOp {
  CIROpID value = 1;
  CIROpID addr = 2;

  optional google.protobuf.Empty is_volatile = 3;
  optional uint64 alignment = 4;
  optional CIRMemOrder mem_order = 5;
}

message CIRSwitchFlatOp {
  CIROpID condition = 1;
  repeated CIROpID defaultOperands = 2;
  repeated CIROpID caseOperands = 3;

  repeated uint32 case_operand_segments = 4;
}

message CIRSwitchOp {
  CIROpID condition = 1;

}

message CIRTernaryOp {
  CIROpID cond = 1;

}

message CIRThrowOp {
  optional CIROpID exception_ptr = 1;

  optional string type_info = 2;
  optional string dtor = 3;
}

message CIRTrapOp {

}

message CIRTruncOp {
  CIROpID src = 1;

}

message CIRTryCallOp {
  repeated CIROpID contOperands = 1;
  repeated CIROpID landingPadOperands = 2;
  repeated CIROpID arg_ops = 3;

  optional string callee = 4;
  CIRCallingConv calling_conv = 5;
}

message CIRTryOp {

  optional google.protobuf.Empty synthetic = 1;
  optional google.protobuf.Empty cleanup = 2;
}

message CIRUnaryOp {
  CIROpID input = 1;

  CIRUnaryOpKind kind = 2;
}

message CIRUnreachableOp {

}

message CIRVAArgOp {
  CIROpID arg_list = 1;

}

message CIRVACopyOp {
  CIROpID dst_list = 1;
  CIROpID src_list = 2;

}

message CIRVAEndOp {
  CIROpID arg_list = 1;

}

message CIRVAStartOp {
  CIROpID arg_list = 1;

}

message CIRVTTAddrPointOp {
  optional CIROpID sym_addr = 1;

  optional string name = 2;
  uint64 offset = 3;
}

message CIRVTableAddrPointOp {
  optional CIROpID sym_addr = 1;

  optional string name = 2;
  uint64 vtable_index = 3;
  uint64 address_point_index = 4;
}

message CIRVecCmpOp {
  CIROpID lhs = 1;
  CIROpID rhs = 2;

  CIRCmpOpKind kind = 3;
}

message CIRVecCreateOp {
  repeated CIROpID elements = 1;

}

message CIRVecExtractOp {
  CIROpID vec = 1;
  CIROpID index = 2;

}

message CIRVecInsertOp {
  CIROpID vec = 1;
  CIROpID value = 2;
  CIROpID index = 3;

}

message CIRVecShuffleDynamicOp {
  CIROpID vec = 1;
  CIROpID indices = 2;

}

message CIRVecShuffleOp {
  CIROpID vec1 = 1;
  CIROpID vec2 = 2;

}

message CIRVecSplatOp {
  CIROpID value = 1;

}

message CIRVecTernaryOp {
  CIROpID cond = 1;
  CIROpID vec1 = 2;
  CIROpID vec2 = 3;

}

message CIRWhileOp {

}

message CIRYieldOp {
  repeated CIROpID args = 1;

}
