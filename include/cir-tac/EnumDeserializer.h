/* Autogenerated by mlir-tblgen; don't manually edit. */
// clang-format off

#pragma once

#include "proto/enum.pb.h"

#include <clang/CIR/Dialect/IR/CIROpsEnums.h>
#include <clang/CIR/Dialect/IR/CIRTypes.h>
#include <mlir/IR/BuiltinTypes.h>

namespace protocir {

class EnumDeserializer {
public:
static cir::AsmFlavor deserializeCIRAsmFlavor(CIRAsmFlavor);
static cir::AtomicFetchKind deserializeCIRAtomicFetchKind(CIRAtomicFetchKind);
static cir::AwaitKind deserializeCIRAwaitKind(CIRAwaitKind);
static cir::BinOpKind deserializeCIRBinOpKind(CIRBinOpKind);
static cir::BinOpOverflowKind deserializeCIRBinOpOverflowKind(CIRBinOpOverflowKind);
static cir::CallingConv deserializeCIRCallingConv(CIRCallingConv);
static cir::CaseOpKind deserializeCIRCaseOpKind(CIRCaseOpKind);
static cir::CastKind deserializeCIRCastKind(CIRCastKind);
static cir::CatchParamKind deserializeCIRCatchParamKind(CIRCatchParamKind);
static cir::CmpOpKind deserializeCIRCmpOpKind(CIRCmpOpKind);
static cir::CmpOrdering deserializeCIRCmpOrdering(CIRCmpOrdering);
static cir::ComplexBinOpKind deserializeCIRComplexBinOpKind(CIRComplexBinOpKind);
static cir::ComplexRangeKind deserializeCIRComplexRangeKind(CIRComplexRangeKind);
static cir::DynamicCastKind deserializeCIRDynamicCastKind(CIRDynamicCastKind);
static cir::GlobalLinkageKind deserializeCIRGlobalLinkageKind(CIRGlobalLinkageKind);
static cir::InlineKind deserializeCIRInlineKind(CIRInlineKind);
static cir::MemOrder deserializeCIRMemOrder(CIRMemOrder);
static cir::sob::SignedOverflowBehavior deserializeCIRSignedOverflowBehavior(CIRSignedOverflowBehavior);
static cir::SizeInfoType deserializeCIRSizeInfoType(CIRSizeInfoType);
static cir::SourceLanguage deserializeCIRSourceLanguage(CIRSourceLanguage);
static cir::TLS_Model deserializeCIRTLSModel(CIRTLSModel);
static cir::UnaryOpKind deserializeCIRUnaryOpKind(CIRUnaryOpKind);
static cir::VisibilityKind deserializeCIRVisibilityKind(CIRVisibilityKind);
static cir::StructType::RecordKind deserializeCIRRecordKind(CIRRecordKind);
static mlir::IntegerType::SignednessSemantics deserializeMLIRSignednessSemantics(MLIRSignednessSemantics);
};
} // namespace protocir
// clang-format on
